setwd("C:\\Users\\Chowdary\\Desktop\\Final exam\\Final exam")
data = read.csv("apriori_data.csv", header = TRUE);
View(data)
data$TID <- NULL
library(arules)
write.csv(data, "ItemList.csv", quote = FALSE, row.names = TRUE)
transactions = read.transactions("ItemList.csv", sep=',', rm.duplicates = TRUE)
inspect(transactions)
frequent_itemsets <- apriori(transactions, parameter = list(sup = 0.03, conf = 0.5,target="frequent itemsets"))
inspect(sort(frequent_itemsets)[1:15])
itemFrequencyPlot(transactions, topN = 5, col="red")
setwd("C:\\Users\\Chowdary\\Desktop\\Final exam\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks","selector"))
str(liver_data)
liver$selector <- as.factor(liver$selector)
liver$drinks <- cut(liver$drinks, breaks = c(0, 5,10,15,20),
labels = c('C1', 'C2', "C3", 'C4'), right = FALSE)
liver <- na.omit(liver)
train = subset(liver, liver$selector == 1)
str(train)
test = subset(liver, liver$selector == 2)
str(test)
dim(train)
dim(test)
x_train <- subset(train, select = -c(selector, drinks))
x_test <- subset(test, select = -c(selector, drinks))
library(class)
y_train = train[,6, drop = TRUE]
y_test = test[,6, drop = TRUE]
length(train)
length(test)
#k = 1
fit1 = knn(x_train,x_train,y_train,k=1)
1-sum(y_test==fit1)/length(y_test)
# Misclassification error : 0.5
#K = 2
fit2 = knn(x_train,x_train,y_train,k=2)
1-sum(y_test==fit2)/length(y_test)
#Misclassification error: 0.51
#k = 3
fit3 = knn(x_train,x_train,y_train,k=3)
1-sum(y_test==fit3)/length(y_test)
#Misclassification error: 0.475
setwd("C:\\Users\\Chowdary\\Desktop\\Final exam\\Final exam")
data = read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks", "selector"))
data$drinks = cut(data$drinks, breaks = c(0,5,10,15,20,25), labels = c('C1', 'C2', 'C3', 'C4', 'C4'), right = FALSE)
data = na.omit(data)
#train  and test sets
traindata = subset(data, data$selector == 1)
testdata = subset(data, data$selector == 2)
x_train <- subset(traindata, select = -c(selector, drinks))
x_test <- subset(testdata, select = -c(selector, drinks))
y_train = traindata[,6, drop = TRUE]
y_test = testdata[,6, drop = TRUE]
#For train data
library(class)
model1 = knn(x_train, x_test, y_train, k = 1)
1-sum(y_train==model1)/length(y_train)
model2 = knn(x_train, x_train, y_train, k = 2)
1-sum(y_train==model2)/length(y_train)
model3 = knn(x_train, x_train, y_train, k = 3)
1-sum(y_train==model3)/length(y_train)
setwd("C:\\Users\\Chowdary\\Desktop\\Final exam\\Final exam")
data = read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks", "selector"))
data$drinks = cut(data$drinks, breaks = c(0,5,10,15,20,25), labels = c('C1', 'C2', 'C3', 'C4', 'C4'), right = FALSE)
data = na.omit(data)
traindata = subset(data, data$selector == 1)
testdata = subset(data, data$selector == 2)
x_train <- subset(traindata, select = -c(selector, drinks))
x_test <- subset(testdata, select = -c(selector, drinks))
y_train = traindata[,6, drop = TRUE]
y_test = testdata[,6, drop = TRUE]
library(class)
model1 = knn(x_train, x_test, y_train, k = 1)
1-sum(y_train==model1)/length(y_train)
model2 = knn(x_train, x_train, y_train, k = 2)
1-sum(y_train==model2)/length(y_train)
model3 = knn(x_train, x_train, y_train, k = 3)
1-sum(y_train==model3)/length(y_train)
setwd("C:\\Users\\Chowdary\\Desktop\\Final exam\\Final exam")
liver = read.csv("bupa.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks","selector"))
str(liver_data)
liver$selector <- as.factor(liver$selector)
liver$drinks <- cut(liver$drinks, breaks = c(0, 5,10,15,20),
labels = c('C1', 'C2', "C3", 'C4'), right = FALSE)
liver <- na.omit(liver)
train = subset(liver, liver$selector == 1)
str(train)
test = subset(liver, liver$selector == 2)
str(test)
dim(train)
dim(test)
x_train <- subset(train, select = -c(selector, drinks))
x_test <- subset(test, select = -c(selector, drinks))
library(class)
y_train = train[,6, drop = TRUE]
y_test = test[,6, drop = TRUE]
length(train)
length(test)
library(e1071)
#SVM
#For training
fit = svm(x_train, y_train)
1-sum(y_train==predict(fit,x_train))/length(y_train)
#Misclassification error: 0.2027
#For test data
fit = svm(x_test, y_test)
1-sum(y_test==predict(fit,x_test))/length(y_test)
#Misclassification error: 0.265
#The error for svm is less than knn
setwd("C:\\Users\\Chowdary\\Desktop\\Final exam\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks","selector"))
str(liver_data)
liver$selector <- as.factor(liver$selector)
liver$drinks <- cut(liver$drinks, breaks = c(0, 5,10,15,20),
labels = c('C1', 'C2', "C3", 'C4'), right = FALSE)
liver <- na.omit(liver)
train = subset(liver, liver$selector == 1)
str(train)
test = subset(liver, liver$selector == 2)
str(test)
dim(train)
dim(test)
x_train <- subset(train, select = -c(selector, drinks))
x_test <- subset(test, select = -c(selector, drinks))
library(class)
y_train = train[,6, drop = TRUE]
y_test = test[,6, drop = TRUE]
length(train)
length(test)
library(e1071)
#SVM
#For training
fit = svm(x_train, y_train)
1-sum(y_train==predict(fit,x_train))/length(y_train)
#Misclassification error: 0.2027
#For test data
fit = svm(x_test, y_test)
1-sum(y_test==predict(fit,x_test))/length(y_test)
#Misclassification error: 0.265
#The error for svm is less than knn
setwd("C:\\Users\\Chowdary\\Desktop\\Final exam\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks","selector"))
liver$selector <- as.factor(liver$selector)
liver$drinks <- cut(liver$drinks, breaks = c(0, 5,10,15,20),
labels = c('C1', 'C2', "C3", 'C4'), right = FALSE)
liver <- na.omit(liver)
train = subset(liver, liver$selector == 1)
test = subset(liver, liver$selector == 2)
x_train <- subset(train, select = -c(selector, drinks))
x_test <- subset(test, select = -c(selector, drinks))
library(class)
y_train = train[,6, drop = TRUE]
y_test = test[,6, drop = TRUE]
library(e1071)
fit = svm(x_train, y_train)
1-sum(y_train==predict(fit,x_train))/length(y_train)
fit = svm(x_test, y_test)
1-sum(y_test==predict(fit,x_test))/length(y_test)
